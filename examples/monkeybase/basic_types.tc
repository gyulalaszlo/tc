package monkeybase

type UPtr = C "uintptr_t"

type void = C "void"

type F32 = C "float"
type F64 = C "double"

type U64 = C "uint64_t"
type I64 = C "int64_t"

"""
  The preferred type for most operations.

  If you need to use a value for indexing in a list or any other task, where
  negative numbers are a non-issue, you should use this type.


"""
type U32 = C "uint32_t"
type I32 = C "int32_t"

type Range = struct {
  start : U32
  end   : U32
}


"""
  A generic structure for callbacks, containing
  a function ptr and 24 bytes of data
"""
type Callback32 = struct {
  """
    An Id or a uintptr_t for the callback ptr
  """
  Id: UPtr

  """
    6 * 4 bytes of data for the callback
  """
  data: U32[6]
}

//type List = struct<T: typename> {
  //Data: T*
  //Length: UPtr
//}

//type AllocatedList = struct<T: typename, AllocatorT: typename> {
  //Allocator: AllocatorT*
  //Data: T*
  //Length: UPtr
//}
